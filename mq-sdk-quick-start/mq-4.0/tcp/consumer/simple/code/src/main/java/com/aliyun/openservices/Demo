package com.aliyun.openservices;

import java.util.Properties;
import com.aliyun.openservices.ons.api.Consumer;
import com.aliyun.openservices.ons.api.ONSFactory;
import com.aliyun.openservices.ons.api.PropertyKeyConst;

public class Demo {

    // 使用必读！！！！
    // 您需要将阿里云密钥信息填写到代码中的 ACCESS_KEY 和 SECRET_KEY 的变量中。
    // 如果您还没有密钥，您可以在 RAM 控制台中创建密钥。https://ram.console.aliyun.com/manage/ak
    // 注意：此密钥必须具有消息接收的权限，否则将无法完成消息接收。https://help.aliyun.com/document_detail/112711.html
    // Please replace the ACCESS_KEY and SECRET_KEY with your Aliyun AK and SK.

    public static final String ACCESS_KEY = "YOUR_ALIYUN_ACCESS_KEY_ID";
    public static final String SECRET_KEY = "YOUR_ALIYUN_ACCESS_KEY_SECRET";

    public static final String NAMESRV_ADDR = "${NAMESRV_ADDR}";
    public static final String TOPIC = "${TOPIC}";
    public static final String TAG = "${TAG}";
    public static final String GROUP_ID = "${GROUP_ID}";

    public static void main(String[] args) {
        Properties consumerProperties = new Properties();
        consumerProperties.setProperty(PropertyKeyConst.GROUP_ID, GROUP_ID);
        consumerProperties.setProperty(PropertyKeyConst.AccessKey, ACCESS_KEY);
        consumerProperties.setProperty(PropertyKeyConst.SecretKey, SECRET_KEY);
        consumerProperties.setProperty(PropertyKeyConst.NAMESRV_ADDR, NAMESRV_ADDR);
        Consumer consumer = ONSFactory.createConsumer(consumerProperties);
        consumer.subscribe(TOPIC, TAG, new MessageListenerImpl());
        consumer.start();
        System.out.println("Consumer start success.");

        // 等待固定时间防止进程退出
        try {
            Thread.sleep(2000000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
